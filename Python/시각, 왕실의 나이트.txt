
# 시각 문제
# 3이 들어가있는 경우의 수를 출력
# 하루는 86,400초 00시 00분 00초부터 23시 59분 59초까지의 모든 경우는 86,400가지
# 24 * 60 * 60 = 86,400
# 따라서 단순히 시각을 1씩 증가시키면서 3이 하나라도 포함되어 있는지 확인
# 이러한 유형을 완전탐색 문제 유형(Brute Forcing)
# 가능한 경우의 수를 모두 검사해보는 탐색 방법을 의미

# H입력 받기
h = int(input())

count = 0
for i in range(h+1): # i는 0부터 h까지 +1을 한다 why? range의 범위가 0부터 ()값 까지 이기 때문에
                    # 입력값 까지 수를 세기 우해서 +1을 해줌
    for j in range(60): # i가 증가 할 때 j도 0 부터 59까지 증가, 밑의 k도 마찬가지
        for k in range(60):
            # 매 시각 안에 '3'이 포함되어 있다면 카운트 증가
            if '3' in str(i) + str(j) + str(k):
                #시,분,초를 문자열로 만들어 붙여버린다 그래서 거기서 '3'이 있는 경우의 수를 샌다
             count += 1
print(count)

########################################################################################

# 현재 나이트의 위치 입력받기
input_date = input()
row = int(input_date[1])
column = int(ord(input_date[0])) - int(ord('a')) + 1
# ord 아스키코드 변환값 나타내는 것 column번호 abcd...이것을 숫자로 변환하여 준다
# ord 하나의 문자를 인자로 받고 해당 문자에 해당하는 유니코드 정수를 반환 

result = 0

# 오른쪽 2칸, 위쪽 1칸
next_row = row - 1
next_column = column + 2

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 오른쪽 2칸, 아래쪽 1칸
next_row = row + 1
next_column = column + 2

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 왼쪽 2칸, 위쪽 1칸
next_row = row - 1
next_column = column - 2

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 왼쪽 2칸, 아래쪽 1칸
next_row = row + 1
next_column = column - 2

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 위쪽 2칸, 오른쪽 1칸
next_row = row - 2
next_column = column + 1

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 위쪽 2칸, 왼쪽 1칸
next_row = row - 2
next_column = column - 1

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 아래쪽 2칸, 오른쪽 1칸
next_row = row + 2
next_column = column + 1

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

# 아래쪽 2칸, 왼쪽 1칸
next_row = row + 2
next_column = column - 1

if next_row >= 1 and next_row <= 8 and next_column >=1 and next_column <= 8:
# 문제의 그림상 체스판안에 위쪽에 짠 코드를 집어 넣어야하기 때문에
    result += 1

print(result)