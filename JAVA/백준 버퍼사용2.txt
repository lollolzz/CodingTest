1번 숫자의 합 [string을 getbyte를 사용해서 변환] [for-each문 사용]

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
 
	public static void main(String[] args) throws IOException {
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		br.readLine(); // 문제에서 주어진 N은 사실상 쓸모가 없다 그래서 입력만 받는다.
		
		int sum = 0;
		
		for(byte value : br.readLine().getBytes()) {
			// getBytes는 문자열을 byte 배열로 변환한다
			// readLine으로 읽어들인 문자를 byte[]로 변환하여 반환되므로 for-each구문을 통해서 
			// 문자열의 문자를 하나하나씩 읽어들일 수 있다.
			// 이 때 UTF-16인코딩에 맞게 각 문자의 값을 저장하므로 반드시 '0' 또는 48을 뺘주어야 한다.
			
			sum += (value - '0'); // 또는 (-48 하기)
		}
		
		System.out.print(sum);
		 
	}
}

2번 알파벳 찾기

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
 
	public static void main(String[] args) throws IOException {
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	
		int [] arr = new int[26]; // 소문자 26가지를 대입 
		
		for(int i =0; i < arr.length; i++) {
			arr[i] = -1;
			// 먼저 int형 배열을 하나 생성하여 모두 -1로 초기화 시킨다. 
			// 이 배열은 문자열 s에 각 문자의 위치를 가리킬 배열이다. 
		}
		
		String s = br.readLine(); // 버퍼로 입력받은 것을 string형으로 하고 싶을 땐 그냥 이대로 하면 된다.
		
		for(int i =0; i< s.length(); i++) {
			// 반복문을 통해 문자열의 각 문자를 검사하여야 한다. 즉 charAt()이라는 메소드를 사용하여 
			// 추출한 뒤 ch라는 변수에 저장해준다.
			char ch = s.charAt(i);
			
			if(arr[ch - 'a'] == -1) { // arr원소 값이 -1인 경우에만 초기화 
				arr[ch - 'a'] = i;
			// ch의 문자의 위치를 우리가 앞서 만든 arr배열의 값으로 바꿔준다. 
			// 위치는 0부터 시작 이니 ch의 문자의 위치는 i가 되는 것을 알 수 있다.
			// 또한 arr 배열의 인덱스는 ch가 갖고 있는 문자 인코딩 값에 'a' 또는 97을 빼주면 된다.
			// b라는 문자가 ch에 담겨져 있을경우 b-'a'또는 b-97을 하면 1이 되고,arr[1]은 문자 b를
			// 가리키는 것을 의미한다.
			
			// 그리고 -1인 경우에는 배열의 원소 값을 변경하고 -1이 아닌 경우 배열의 원소 값을 변경하지 않는다.
				
			}
		}
		
		
		for(int val : arr) { // 배열 출력 
			System.out.println(val + " ");
			
		}
		
	}
}

3번 단어 공부 

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
 
	public static void main(String[] args) throws IOException {
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		
		int [] arr = new int[26]; // 영문자의 개수는 26개임 
		String s = br.readLine();
		
		// 문자열을 입력받기에 앞서 각 문자들의 빈도수를 나타내기 위한 배열을 하나 선언하고
		// 문자열 s를 입력받는다. 
		// 이때 0번째 원소는 A를 의미한다. 
		
		for(int i=0; i < s.length(); i++) { // 문자열 s에 대하여 첫 번째 문자부터 마지막 문자 까지 검사하기 위한 반복문 작
			
			if('a' <= s.charAt(i) && s.charAt(i) <= 'z') { 
				// 대문자 범
				arr[s.charAt(i) - 97]++;
				
				// 10진수 등을 나타내는 표를 보자 
				// C를 입력받았을 때, 배열의 세 번째 원소인 2을 도출해 내려면 C는 67이니 65를 빼주면된다.
				
				
			}else {
				// 소문자 범위 
				arr[s.charAt(i) - 65]++;
				// 만약 소문자 e를 입력받았을 경우에는 다섯 번째 원소인 4를 도출해야하니 97을 빼주면 101-97로 배열의 
				// 인덱스 값을 도출 할 수 있다.
			}
		}
		
		int max = -1;
		char ch = '?';
		for(int i=0; i< 26; i++) {
			
			if (arr[i] > max) {
				// 해당 배열 원소 값이 max보다 클 경우는 해당 원소값으로 max를 대치해주고, ch의 문자를 해당
				// 인덱스에 대응하는 문자로 대치해야한다 
				
				max = arr[i];
				ch = (char) (i + 65);
				
			}
			
			else if(arr[i] == max) {
				// 배열의 원소값이 max값이랑 같을 경우 최대 개수의 문자가 2개 이상이라는 의미이므로
				// ch를 물음표 (?)로 바꾸어 주어야한다.
				ch = '?';
			}
		}
		System.out.println(ch);
		
	}
}

4번 단어의 개수 

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
 
	public static void main(String[] args) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		// 영어 대소문자와 공백으로 이루어진 문자열이 주어 진다. 그래서 
		// StringTokenizer 와 br.readLine()을 사용해서 문자열을 입력받음 
		
		System.out.print(st.countTokens());
		
		// countTokens는 StringTokenizer의 모든 갯수가 아닌 nextToken 메서드를
		// 호출 할 수 있는 횟수를 계산
		
		
	}
}

5번 상수 

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
 
	public static void main(String[] args) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		
		int A = Integer.parseInt(new StringBuilder(st.nextToken()).reverse().toString());
		int B = Integer.parseInt(new StringBuilder(st.nextToken()).reverse().toString());
		// A,B를 뒤집어서 두 수의 크기를 비교할거기 때문에 reverse().toString()사용 
		
		System.out.println(A > B ? A:B);
	
		
	}
}
