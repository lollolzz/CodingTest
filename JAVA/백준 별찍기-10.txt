=> 재귀함수를 잘 사용해야하고 / 주어진 문제의 패턴을 잘 파악해서 구현해야한다
=> 이차원 배열 사용 / 문제 패턴 분석 해서 조건문 반복문을 사용해야함
=> 어려움!

package com.coding;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
 
	static char[][] arr;
	
	public static void main(String[] args) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int N = Integer.parseInt(br.readLine());
		
		arr = new char[N][N];
		// 좌표 형식으로 *에 접근을 해야하기 때문에 이차원 배열사용해야한다.
		// 문제의 출력 답을 보면 알아 낼 수있데....
		
		star(0, 0, N, false);
		// 초기 값을 false로 해두고 변경이 있을경우 바꿔주는듯 
		
		StringBuilder sb = new StringBuilder();
		// system.out.printin()을 반복하여 호출하지 않고 StringBuilder를 이용하여 문자열을 이어준 뒤 
		// 한 번에 출력을 해보려고 작성 
		for(int i =0; i < N; i++) {
			for(int j =0; j < N; j++) {
				sb.append(arr[i][j]);
				//  StringBuilder 이용해서 문자열을 이어서 한방에 출력하고 
				// append해서 이차원 배열에 N까지의 수들을 추가해준
			}
			sb.append('\n');
		}
		System.out.print(sb);	
			
	}
	static void star(int x, int y, int N, boolean blank) {
		
		// 공백칸일 경우 
		if (blank) {
			for (int i = x; i< x + N; i++) {
				for(int j = y; j < y + N; j++) {
					arr[i][j] = ' ';
				}
			}
			return;
		}
		
		// 더이상 쪼갤 수 없는 블록 일 때 
		if(N == 1) {
			arr[x][y] = '*';
			return;
		}
		
	/*  N = 27일 경우 한 블록의 사이즈는 9이고,
		N = 9일 경우 한 블록의 사이즈는 3이듯
		해당 블록의 한 칸을 담을 변수를 의미 size
		
		count는 별 출력 누적을 의미 */
		
		
		int size = N / 3;
		int count = 0;
		
		for(int i = x; i < x + N; i += size) {
			for(int j = y; j < y + N; j += size) {
				count++;
				if(count == 5) { // 공백칸일 경우 
					star(i, j, size, true);
				}
				else {
					star(i, j, size, false);
				}
			}
		}
		
		
	}	
		
	}

