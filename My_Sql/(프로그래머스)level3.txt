1. 없어진 기록 찾기

SELECT B.ANIMAL_ID, B.NAME
FROM ANIMAL_OUTS AS B
LEFT JOIN ANIMAL_INS AS A
ON B.ANIMAL_ID = A.ANIMAL_ID
WHERE A.ANIMAL_ID IS NULL
ORDER BY ANIMAL_ID;

# ANIMAL_ID가 같은 값이 ANIMAL_INS 테이블에 존재하지 않는다면, NULL 값으로 연결될 것입니다.
# ANIMAL_INS에 없는 ID를 찾아서 뽑아야하므로 WHERE A.ANIMAL_ID IS NULL 사용

2. 오랜기간 보호한 동물(1)

SELECT A.NAME, A.DATETIME
FROM ANIMAL_INS A LEFT JOIN ANIMAL_OUTS B ON A.ANIMAL_ID = B.ANIMAL_ID
WHERE B.ANIMAL_ID IS NULL
ORDER BY A.DATETIME
LIMIT 3

# ANIMAL_ID IS NULL을 넣어 A에는 있지만 B에는 없는 값만 뽑아내야함 => 결과는 4행이 출력됨
# 이때 A테이블의 DATETIME순으로 3행만 뽑아와야해서 LIMIT 3을 사용
# LEFT JOIN을 한 이유는 A테이블을 기준으로 B테이블을 합쳐서 
# A에 있지만 B에는 없는 INTAKE_CONDTION을 구별해 낼 수 있기 때문
# A테이블은 보내기전 B는 보낸 후의 테이블 정보이다

3. 오랜기간 보호한 동물(2)

SELECT A.ANIMAL_ID, A.NAME
FROM ANIMAL_INS AS A
JOIN ANIMAL_OUTS AS B
ON A.ANIMAL_ID = B.ANIMAL_ID
ORDER BY B.DATETIME - A.DATETIME DESC 
LIMIT 2

# JOIN이 필요하고 
# ORDER BY 에도 연산이 가능하다 
# B에서 A를 뺀 것은 보호기간을 구하기 위해서이다.
# LIMIT2를 한 이유는 입양을 간 동물이 2마리 이상인 경우를 출력하기 위하여이다.